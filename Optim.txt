Initial Run: - Method 1
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 18.55s
Without: 01.56s

2nd Run: - Method 2
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 51.37s
Without: 01.56s
Changes: Moved connection to seperate for loops - Means more checks are run at the end

3rd Run: - Method 3
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 12.71s
Without: 01.56s
Changes: Swapped which was checked first, so it checks existing vector elements first in the edition

4th Run: - method 4
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 44.63
Without: 01.56s
Changes: Moved connection to seperate for loops, added a check so each element is checked once to reduce redundancy

5th Run: - - Method 3
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 12.68
Without: 01.35s
Changes: removed some unneeded  buffer stuff from Init

6th Run: - - Method 3
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 12.70
Without: 01.35s
Changes: Swapped which vertex became which in Init


7th Run: - Method 5
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 44.25
Without: 01.35s
Changes: added holder vector, used function to sort into gridVec

8th Run: - Method 6 - Start of Threading era
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: unknown
Without: 01.25s
Changes: placed creation of terrain into a thread.

9th Run: - Method 6 - Connection now threaded too
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 1:01 mins
Without: 01.25s
Changes: terrain creation and webbing both threaded, using locks


10th Run: - Method 3 - both threaded now
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 13.51
Without: 01.25s
Changes: both threaded, no locking needed

11th Run: - Method 3 - Multiple web threads being created one after another by the terrain thread.
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 13.60
Without: 01.10s
Changes: both threaded, if joinable check on web thread

12th Run: - Method 3 - Multiple web threads being created one after another by the terrain thread.
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(10.0f, 10.0f, 10.0f), 10, 10.0f*Vector3::One, _pd3dDevice);
With Connection: 13.40
Without: 01.10s
Changes: both threaded, if joinable removed

13th Run: - changed starting values - laggy
Values: Terr->Init(Vector3(0.0f, 0.0f, 0.0f), Vector3(20.0f, 20.0f, 20.0f), 0.01, 20.0f*Vector3::One, _pd3dDevice);
With Connection: over 1min 15 seconds - stopped the loading there.
Without: 01.73s
Changes: both threaded, if joinable removed